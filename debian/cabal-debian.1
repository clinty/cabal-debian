.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.11.
.TH CABAL-DEBIAN "1" "November 2019" "cabal-debian 5.0" "User Commands"
.SH NAME
cabal-debian \- manual page for cabal-debian 5.0
.SH SYNOPSIS
.B cabal-debian
[\fI\,-v|--verbose\/\fR] [\fI\,-n|--dry-run\/\fR] [\fI\,--upgrade\/\fR] [\fI\,--roundtrip\/\fR]
.SH DESCRIPTION
cabal\-debian \fB\-\-\fR create debianization of cabal package
.TP
[\-\-ghcjs]
[\-\-cabal\-flag|\-\-cabal\-flags CABALFLAG or \fB\-CABALFLAG]\fR
[\-\-buildenvdir DIR] [\-m|\-\-maintainer 'NAME <EMAIL>']
[\-u|\-\-uploader 'NAME <EMAIL>']
[\-e|\-\-executable SOURCEPATH[:DESTDIR]]
[\-d|\-\-default\-package PKGNAME] [\-\-missing\-dependency DEB]
[\-b|\-\-debian\-name\-base NAME] [\-\-deb\-version DEBIANVERSION]
[\-\-revision DEBIANREVISION]
[\-s|\-\-source\-package\-name DEBIANNAME]
[\-S|\-\-source\-section SECTION]
[\-\-standards\-version CABALVERSION]
[\-\-build\-dep DEBIANRELATIONS]
[\-\-build\-dep\-indep DEBIANRELATIONS] [\-\-dev\-dep RELATION]
[\-\-depends DEB:RELATION] [\-\-conflicts DEB:RELATION]
[\-\-provides DEB:RELATION] [\-\-replaces DEB:RELATION]
[\-\-recommends DEB:RELATION] [\-\-suggests DEB:RELATION]
[\-\-dep\-map CABAL:DEBIANBINARYPACKAGE]
[\-\-epoch\-map CABALPACKAGE=DIGIT]
[\-\-exec\-map CABAL:DEBIANBINARYPACKAGE] [\-\-disable\-profiling]
[\-\-disable\-haddock] [\-\-official] [\-\-native]
([\-\-disable\-running\-tests|\-\-no\-run\-tests] |
[\-\-disable\-tests|\-\-no\-tests])
.IP
Typical usage is run in unpacked source root directory
.IP
\f(CW% cabal-debian  --maintainer 'Maintainer Name <maintainer@email>'\fR
.IP
This will read the package's cabal file and any existing debian/changelog file and
.IP
deduce what it can about the debianization, then it will create or modify files in
the debian subdirectory.  Note that it will not remove any files in debian, and
these could affect the operation of the debianization in unknown ways.  For this
reason it is recommended either using a pristine unpacked directory each time, or else
using a revision control system to revert the package to a known state before running.
.IP
Arguments: cabal\-debian \fB\-\-help\fR
.SS "Available options:"
.TP
\fB\-h\fR,\-\-help
Show this help text
.TP
\fB\-v\fR,\-\-verbose
Every instance of this flag increases amount of
progress messages generated
.TP
\fB\-n\fR,\-\-dry\-run
Just compare the existing debianization to the one we
would generate.
.TP
\fB\-\-upgrade\fR
Upgrade an existing debianization carefully
preserving fields that are commonly hand\-edited.
.TP
\fB\-\-roundtrip\fR
Roundtrip a debianization to normalize it.
.TP
\fB\-\-ghcjs\fR
Set compiler flavor to GHCJS.
.TP
\fB\-\-cabal\-flag\fR,\-\-cabal\-flags CABALFLAG or \fB\-CABALFLAG\fR
Flags to pass to cabal configure with the \fB\-\-flags=\fR
option
.TP
\fB\-\-buildenvdir\fR DIR
Directory containing the three build environments,
clean, depend, and build.
.TP
\fB\-m\fR,\-\-maintainer 'NAME <EMAIL>'
Set the `Maintainer' field in debian/control file.
.TP
\fB\-u\fR,\-\-uploader 'NAME <EMAIL>'
Add entry to `Uploaders' field in debian/control
file.
.TP
\fB\-e\fR,\-\-executable SOURCEPATH[:DESTDIR]
Create an individual binary package to hold this
executable. Other executables and data files are
gathered into a single package named
`haskell\-PACKAGENAME\-utils'
.TP
\fB\-d\fR,\-\-default\-package PKGNAME
Set the name of the catch\-all package that receives
all the files not included in a library package or
some other executable package. By default this is
`haskell\-PACKAGENAME\-utils'
.TP
\fB\-\-missing\-dependency\fR DEB This is the counterpart to \fB\-\-disable\-haddock\fR. It
prevents a package from being added to the build
dependencies. This is necessary, for example, when a
dependency package was built with the
\fB\-\-disable\-haddock\fR option, because normally
cabal\-debian assumes that the \fB\-doc\fR package exists and
adds it as a build dependency.
.TP
\fB\-b\fR,\-\-debian\-name\-base NAME
Use this name for the base of the debian binary
packages \- the string between 'libghc\-' and '\-dev'.
Normally this is derived from the hackage package
name.
.TP
\fB\-\-deb\-version\fR DEBIANVERSION
Specify the version number for the debian package.
This will pin the version and should be considered
dangerous.
.TP
\fB\-\-revision\fR DEBIANREVISION
Add this string to the cabal version to get the
debian version number. Debian policy says this must
either be empty (\fB\-\-revision\fR '') or begin with a dash.
.TP
\fB\-s\fR,\-\-source\-package\-name DEBIANNAME
Use this name for the debian source package, the name
in the Source field at the top of the debian/control
file, and also at the very beginning of the
debian/changelog file. By default it is
haskell\-<cabalname>, where the cabal package name is
downcased.
.TP
\fB\-S\fR,\-\-source\-section SECTION
Set the `Section' field in debian/control file.
.TP
\fB\-\-standards\-version\fR CABALVERSION
Claim compatibility to this version of the Debian
policy (i.e. the value of the Standards\-Version
field)
.TP
\fB\-\-build\-dep\fR DEBIANRELATIONS
Add a dependency relation to the `Build\-Depends'
field for this source package.
.TP
\fB\-\-build\-dep\-indep\fR DEBIANRELATIONS
Add a dependency relation to the
`Build\-Depends\-Indep' field for this source package.
.TP
\fB\-\-dev\-dep\fR RELATION
Add an entry to the `Depends' field of the \fB\-dev\fR
package
.TP
\fB\-\-depends\fR DEB:RELATION
Add extry to 'Depends 'field of DEB binary package
.HP
\fB\-\-conflicts\fR DEB:RELATION Add extry to 'Conflicts 'field of DEB binary package
.TP
\fB\-\-provides\fR DEB:RELATION
Add extry to 'Provides 'field of DEB binary package
.TP
\fB\-\-replaces\fR DEB:RELATION
Add extry to 'Replaces 'field of DEB binary package
.TP
\fB\-\-recommends\fR DEB:RELATION
Add extry to 'Recommends 'field of DEB binary package
.TP
\fB\-\-suggests\fR DEB:RELATION
Add extry to 'Suggests 'field of DEB binary package
.TP
\fB\-\-dep\-map\fR CABAL:DEBIANBINARYPACKAGE
Specify what debian package name corresponds with a
name that appears in the Extra\-Library field of a
cabal file, e.g. \fB\-\-map\-dep\fR cryptopp:libcrypto\-dev.
.TP
\fB\-\-epoch\-map\fR CABALPACKAGE=DIGIT
Specify a mapping from the cabal package name to a
digit to use as the debian package epoch number, e.g.
\fB\-\-epoch\-map\fR HTTP=1
.TP
\fB\-\-exec\-map\fR CABAL:DEBIANBINARYPACKAGE
Specify a mapping from the name appearing in the
Build\-Tool field of the cabal file to a debian binary
package name, e.g. \fB\-\-exec\-map\fR trhsx:haskell\-hsx\-utils
.TP
\fB\-\-disable\-profiling\fR
Do not generate profiling (\fB\-prof\fR) library package, do
not add \fB\-prof\fR packages to the build dependency list.
.TP
\fB\-\-disable\-haddock\fR
Do not create a \fB\-doc\fR package
.TP
\fB\-\-official\fR
Follow guidelines of Debian Haskell Group
.TP
\fB\-\-native\fR
Package has an no upstream tarball, write '3.0
(native)' into source/format.
.TP
\fB\-\-disable\-running\-tests\fR,\-\-no\-run\-tests
build, but do not run test suite
.TP
\fB\-\-disable\-tests\fR,\-\-no\-tests
disable test suite
